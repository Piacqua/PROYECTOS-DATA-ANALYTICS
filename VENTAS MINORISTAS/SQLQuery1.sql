-- SELECT * FROM sales_data_sample;	2823 rows

-- IMPUTACION NULOS (MAS DETALLE EN DOCUMENTACION)
	-- ADDRESSLINE2        2521		89% del dataset
		-- COLUMNA NO UTILIZADA EN EL ANALISIS PORQUE NO QUITA VALOR SIGNIFICANTE

	-- STATE               1486		52% del dataset
		-- SELECT COUNTRY, STATE, COUNT(*) FROM sales_data_sample WHERE STATE IS NULL GROUP BY COUNTRY, STATE;
		-- COLUMNA NO UTILIZADA EN EL ANALISIS DEBIDO A FALTA DE DATOS

	-- TERRITORY           1074		38% del dataset
		-- FALSO POSITIVO YA QUE 'NA' HACE REFERENCIA A 'NORTH AMERICA' PERO PANDAS LO INTERPRETA COMO NULO
		-- SE REEMPLAZA 'NA' CON 'NORTH AMERICA'
UPDATE sales_data_sample SET TERRITORY = 'NORTH AMERICA' WHERE TERRITORY = 'NA'

	-- POSTALCODE            76		02% del dataset
		-- SELECT COUNTRY, CITY, COUNT(*) FROM sales_data_sample WHERE POSTALCODE IS NULL GROUP BY COUNTRY, CITY;
		-- SE IMPUTAN LOS FALTANTES CON LOS CODIGOS POSTALES PRINCIPALES DE LAS CIUDADES
			-- SAN FRANCISCO = 94102
			-- LOS ANGELES = 90001
UPDATE sales_data_sample SET POSTALCODE = '94102' WHERE CITY = 'San Francisco' AND POSTALCODE IS NULL;
UPDATE sales_data_sample SET POSTALCODE = '90001' WHERE CITY = 'Los Angeles' AND POSTALCODE IS NULL;



-- CREACION TABLA PEDIDOS
-- SELECT * FROM ORDERS;
CREATE TABLE [dbo].[ORDERS](
	ID_Order INT IDENTITY(1,1) NOT NULL, -- Numero de Orden > FALSO PK
	ID_Customer INT, -- FK CUSTOMERS
	ID_Product NVARCHAR(20), -- FK PRODUCTS
	OrderNumber NVARCHAR(20), -- Numero de Orden > FALSO PK
	OrderDate DATE, -- Fecha de orden
	QuantityOrder INT, -- Cantidad ordenada
	PriceEach FLOAT, -- Precio unitario
	OrderLineNumber INT, -- Orden de compra
	Sales FLOAT, -- Ventas generadas
	DealSize NVARCHAR(30), -- Tamaño del acuerdo
	Status NVARCHAR(20), -- Estado del pedido
	CONSTRAINT [PK_ORDERS_ID_Order] PRIMARY KEY CLUSTERED (ID_Order),
	CONSTRAINT [FK_ORDERS_CUSTOMERS] FOREIGN KEY (ID_Customer) REFERENCES [dbo].[CUSTOMERS](ID_Customer),
	CONSTRAINT [FK_ORDERS_PRODUCTS] FOREIGN KEY (ID_Product) REFERENCES [dbo].[PRODUCTS](ID_ProductCode),
);


-- CREACION TABLA CLIENTES
-- SELECT * FROM CUSTOMERS;
CREATE TABLE [dbo].[CUSTOMERS] (
	ID_Customer INT IDENTITY(1,1) NOT NULL, -- PK
	ID_Location INT, -- FK LOCATIONS
	CustomerName NVARCHAR(70), -- NOMBRE EMPRESA
	ContactNameLastname NVARCHAR(50), -- NOMBRE Y APELLIDO CLIENTE
	CONSTRAINT [PK_CUSTOMERS_ID_Customer] PRIMARY KEY CLUSTERED (ID_Customer),
	CONSTRAINT [FK_CUSTOMERS_LOCATIONS] FOREIGN KEY (ID_Location) REFERENCES [dbo].[LOCATIONS](ID_Location),
);

-- CREACION TABLA UBICACION
-- SELECT * FROM LOCATIONS;
CREATE TABLE LOCATIONS(
	ID_Location INT IDENTITY(1,1) NOT NULL, -- PK
	Territory NVARCHAR(50), -- TERRITORIO DONDE UBICAR AL PAIS
	Country NVARCHAR(50), -- PAIS
	City NVARCHAR(50), -- CIUDAD
	PostalCode NVARCHAR(20), -- CODIGO POSTAL
	CONSTRAINT [PK_LOCATIONS_ID_Location] PRIMARY KEY CLUSTERED (ID_Location)
);

-- CREACION TABLA PRODUCTOS
-- SELECT * FROM 
CREATE TABLE PRODUCTS(
	ID_ProductCode NVARCHAR(20) NOT NULL, -- PK
	ProductLine NVARCHAR(50), -- TIPO PRODUCTO
	MSRP INT, -- PRECIO MINORISTA SUGERIDO POR EL FABRICANTE
	CONSTRAINT [PK_PRODRUCTS_ID_Product] PRIMARY KEY CLUSTERED (ID_ProductCode)
);

-- ------------------------------------------------------
-- SELECT * FROM PRODUCTS
-- INTRODUCIR DATOS EN LA TABLA PRODUCTS
INSERT INTO PRODUCTS (ID_ProductCode, ProductLine, MSRP)
SELECT DISTINCT PRODUCTCODE, PRODUCTLINE, MSRP
FROM sales_data_sample;

-- SELECT * FROM LOCATIONS
-- INTRODUCIR DATOS EN LA TABLA LOCATIONS
INSERT INTO LOCATIONS (Territory, Country, City, PostalCode)
SELECT DISTINCT TERRITORY, COUNTRY, CITY, POSTALCODE
FROM sales_data_sample;

-- SELECT * FROM CUSTOMERS
-- INTRODUCIR DATOS EN LA TABLA CUSTOMERS
INSERT INTO CUSTOMERS (ID_Location, CustomerName, ContactNameLastname)
SELECT DISTINCT l.ID_Location, sds.CUSTOMERNAME, CONCAT(sds.CONTACTFIRSTNAME, ' ', sds.CONTACTLASTNAME)
FROM sales_data_sample as sds
JOIN LOCATIONS as l
ON 
sds.TERRITORY = l.Territory AND
sds.COUNTRY = l.Country AND
sds.CITY = l.City AND
sds.POSTALCODE = l.PostalCode;

-- SELECT * FROM sales_data_sample;
-- SELECT * FROM ORDERS
INSERT INTO ORDERS (OrderNumber, ID_Customer, ID_Product, OrderDate, QuantityOrder, PriceEach, OrderLineNumber, Sales, DealSize, Status) 
SELECT sds.ORDERNUMBER, c.ID_Customer, p.ID_ProductCode, sds.ORDERDATE, sds.QUANTITYORDERED, sds.PRICEEACH, sds.ORDERLINENUMBER, sds.SALES, sds.DEALSIZE, sds.STATUS
FROM sales_data_sample as sds
JOIN CUSTOMERS as c 
ON
sds.CUSTOMERNAME = c.CustomerName AND
CONCAT(sds.CONTACTFIRSTNAME, ' ', sds.CONTACTLASTNAME) = c.ContactNameLastname
JOIN PRODUCTS as p 
ON
sds.PRODUCTCODE = p.ID_ProductCode